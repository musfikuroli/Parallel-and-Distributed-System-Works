/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MATRIX_H_RPCGEN
#define _MATRIX_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct matrices {
	int row1;
	int col1;
	int a[100];
	int row2;
	int col2;
	int b[100];
};
typedef struct matrices matrices;

struct matrix {
	int row;
	int col;
	int a[100];
};
typedef struct matrix matrix;

struct matrixInverse {
	int row;
	int col;
	float a[100];
	int flag;
};
typedef struct matrixInverse matrixInverse;

#define MATRIX_OPERATIONS_PROG 0x23452222
#define MATRIX_OPERATIONS_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define MATRIX_ADD 1
extern  matrix * matrix_add_1(matrices *, CLIENT *);
extern  matrix * matrix_add_1_svc(matrices *, struct svc_req *);
#define MATRIX_MULTIPLY 2
extern  matrix * matrix_multiply_1(matrices *, CLIENT *);
extern  matrix * matrix_multiply_1_svc(matrices *, struct svc_req *);
#define MATRIX_INVERSE 3
extern  matrixInverse * matrix_inverse_1(matrix *, CLIENT *);
extern  matrixInverse * matrix_inverse_1_svc(matrix *, struct svc_req *);
#define MATRIX_TRANSPOSE 4
extern  matrix * matrix_transpose_1(matrix *, CLIENT *);
extern  matrix * matrix_transpose_1_svc(matrix *, struct svc_req *);
extern int matrix_operations_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define MATRIX_ADD 1
extern  matrix * matrix_add_1();
extern  matrix * matrix_add_1_svc();
#define MATRIX_MULTIPLY 2
extern  matrix * matrix_multiply_1();
extern  matrix * matrix_multiply_1_svc();
#define MATRIX_INVERSE 3
extern  matrixInverse * matrix_inverse_1();
extern  matrixInverse * matrix_inverse_1_svc();
#define MATRIX_TRANSPOSE 4
extern  matrix * matrix_transpose_1();
extern  matrix * matrix_transpose_1_svc();
extern int matrix_operations_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_matrices (XDR *, matrices*);
extern  bool_t xdr_matrix (XDR *, matrix*);
extern  bool_t xdr_matrixInverse (XDR *, matrixInverse*);

#else /* K&R C */
extern bool_t xdr_matrices ();
extern bool_t xdr_matrix ();
extern bool_t xdr_matrixInverse ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MATRIX_H_RPCGEN */
